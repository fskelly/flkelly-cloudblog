<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Azure on Fletcher&#39;s Cloud Journey</title>
    <link>https://cloud.fskelly.com/categories/azure/</link>
    <description>Recent content in Azure on Fletcher&#39;s Cloud Journey</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 03 Aug 2023 15:24:21 +0100</lastBuildDate><atom:link href="https://cloud.fskelly.com/categories/azure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Can I run this cheaper? Use case for the Azure Cost Management API</title>
      <link>https://cloud.fskelly.com/post/2023/azure-cost-management-playing-with-api-in-powershell/</link>
      <pubDate>Thu, 03 Aug 2023 15:24:21 +0100</pubDate>
      
      <guid>https://cloud.fskelly.com/post/2023/azure-cost-management-playing-with-api-in-powershell/</guid>
      <description>What are we doing? I was given inspiration by a colleague, Ben Hummerstone who used a Azure Python Function, whilst super cool and interesting, I am a PowerShell advocate through and through. So I used PowerShell and wrote a script to show some of the use cases. This is just the tip of the iceberg and the script has been built to show some of the options available.
Constraints / limitations The primary focus of this script is IaaS.</description>
    </item>
    
    <item>
      <title>Using Azure Resource Graph and Tags to lock items in Azure</title>
      <link>https://cloud.fskelly.com/post/2022/using-arg-tolock-resources/</link>
      <pubDate>Mon, 03 Oct 2022 13:59:06 +0100</pubDate>
      
      <guid>https://cloud.fskelly.com/post/2022/using-arg-tolock-resources/</guid>
      <description>What are we doing? We are going to use Azure Resource Graph to find items with a specific tag, in this case {&amp;ldquo;toBeLocked&amp;rdquo;=&amp;ldquo;Yes&amp;rdquo;} and then place a resource lock on them.
Constraints / limitations Use Azure Resource Graph to perform the search. Very fast and gives you a new way to interface with Azure Resources. As part of this post, I am giving samples below to create items, you could use these for testing.</description>
    </item>
    
    <item>
      <title>Using Arc to SSH into Linux and Windows</title>
      <link>https://cloud.fskelly.com/post/2022/arc-ssh-windows-linux/</link>
      <pubDate>Tue, 27 Sep 2022 08:03:53 +0100</pubDate>
      
      <guid>https://cloud.fskelly.com/post/2022/arc-ssh-windows-linux/</guid>
      <description>What are we doing? We are going to use Azure Arc to SSH into a Linux (ubuntu 20.04) and a Windows Server (Server 2019) machine and run commands.
Constraints / limitations Use only Azure ARC. Use only public endpoints (I have not yet tested this with Private Endpoints) and my VPN is not currently connected to Azure. Considerations As of the time of this blog post (27-Sep-2022), the Azure Arc SSH functionality is in preview.</description>
    </item>
    
    <item>
      <title>Using SSH Keys with Bicep based Linux VM templates</title>
      <link>https://cloud.fskelly.com/post/2022/bicep-linux-vm-ssh-keys/</link>
      <pubDate>Mon, 20 Jun 2022 08:54:21 +0100</pubDate>
      
      <guid>https://cloud.fskelly.com/post/2022/bicep-linux-vm-ssh-keys/</guid>
      <description>I this post, I use bicep files for the deployment of Linux VMs AND I add some magic with PowerSehll to allow for the creation or using of existing SSH keys with these VMs.
I am a HUGE fan of SSH keys with Linux VMs for obvious reasons. I could just not find a script or scenario that covered this topic in a way that I actually like. I like to show more details and explain.</description>
    </item>
    
    <item>
      <title>Azure Resource Graph - More queries for Networking and Management Groups</title>
      <link>https://cloud.fskelly.com/post/2021/2021-arg-networking-mgmt-more/</link>
      <pubDate>Thu, 09 Dec 2021 08:00:00 +0000</pubDate>
      
      <guid>https://cloud.fskelly.com/post/2021/2021-arg-networking-mgmt-more/</guid>
      <description>Just some more queries I have developed.
Networking Don&amp;rsquo;t create unnecessarily large virtual networks (for example, /16) to ensure that IP address space isn&amp;rsquo;t wasted.
resources | where type == &amp;#34;microsoft.network/virtualnetworks&amp;#34; | extend addressSpace = todynamic(properties.addressSpace) | extend addressPrefix = todynamic(properties.addressSpace.addressPrefixes) | mvexpand addressSpace | mvexpand addressPrefix | extend addressMask = split(addressPrefix,&amp;#39;/&amp;#39;)[1] | where addressMask &amp;lt;= 16 Smallest recommended size for a GatewaySubnet is /27
When you are planning your gateway subnet size, refer to the documentation for the configuration that you are planning to create.</description>
    </item>
    
    <item>
      <title>Azure Resource Group Enterprise Scale Landing Zone queries</title>
      <link>https://cloud.fskelly.com/post/2021/arg-mg--query-quick-post/</link>
      <pubDate>Wed, 25 Aug 2021 05:58:18 +0200</pubDate>
      
      <guid>https://cloud.fskelly.com/post/2021/arg-mg--query-quick-post/</guid>
      <description>Azure Resource Graph Examples This is just a quick post. I am slowly working on building a collection of Resource Graph Queries - they can be found here and will grow over time. It just takes some time to build these.
They will be broken down into a folder structure based upon the Critical Design Areas of Enterprise Scale Landing Zone
Hope this helps and keep an eye out for more.</description>
    </item>
    
    <item>
      <title>Bicep Troubleshooting</title>
      <link>https://cloud.fskelly.com/post/2021/bicep-troubleshooting/</link>
      <pubDate>Fri, 02 Jul 2021 05:40:16 +0200</pubDate>
      
      <guid>https://cloud.fskelly.com/post/2021/bicep-troubleshooting/</guid>
      <description>Some basic &amp;ldquo;troubleshooting&amp;rdquo; with Azure Bicep So, let me start with this. The team and the community behind Azure Bicep are amazing. There are some great examples here. I often use these as a base and the rip apart or add to meet my needs, you do NOT need to start from ground zero. :smile:
When you are deploying bicep templates you command will look something like this.
$bicepFile = &amp;#34;.</description>
    </item>
    
    <item>
      <title>Cli List Locations and Peers</title>
      <link>https://cloud.fskelly.com/post/2021/cli-list-locations-and-peers/</link>
      <pubDate>Wed, 05 May 2021 07:03:02 +0200</pubDate>
      
      <guid>https://cloud.fskelly.com/post/2021/cli-list-locations-and-peers/</guid>
      <description>How to use the Azure CLI to list Azure Locations and their peers So this will be a &amp;ldquo;quick post&amp;rdquo; that shows some great functionality within the Azure CLI with az account list-locations. With this command you can expect some output like below, you actually get a lot of content back.
{ &amp;#34;displayName&amp;#34;: &amp;#34;Brazil Southeast&amp;#34;, &amp;#34;id&amp;#34;: &amp;#34;/subscriptions/949ef534-07f5-4138-8b79-aae16a71310c/locations/brazilsoutheast&amp;#34;, &amp;#34;metadata&amp;#34;: { &amp;#34;geographyGroup&amp;#34;: &amp;#34;South America&amp;#34;, &amp;#34;latitude&amp;#34;: &amp;#34;-22.90278&amp;#34;, &amp;#34;longitude&amp;#34;: &amp;#34;-43.2075&amp;#34;, &amp;#34;pairedRegion&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;/subscriptions/949ef534-07f5-4138-8b79-aae16a71310c/locations/brazilsouth&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;brazilsouth&amp;#34;, &amp;#34;subscriptionId&amp;#34;: null } ], &amp;#34;physicalLocation&amp;#34;: &amp;#34;Rio&amp;#34;, &amp;#34;regionCategory&amp;#34;: &amp;#34;Other&amp;#34;, &amp;#34;regionType&amp;#34;: &amp;#34;Physical&amp;#34; }, &amp;#34;name&amp;#34;: &amp;#34;brazilsoutheast&amp;#34;, &amp;#34;regionalDisplayName&amp;#34;: &amp;#34;(South America) Brazil Southeast&amp;#34;, &amp;#34;subscriptionId&amp;#34;: null } If you look at some of the examples, you will also see some &amp;ldquo;logical&amp;rdquo; locations, example below, there is a way of adding a query to remove these to display only &amp;ldquo;physical&amp;rdquo; locations.</description>
    </item>
    
    <item>
      <title>Azure Rest Api Postman Basics</title>
      <link>https://cloud.fskelly.com/post/2021/azure-rest-api-postman-basics/</link>
      <pubDate>Wed, 14 Apr 2021 09:02:18 +0200</pubDate>
      
      <guid>https://cloud.fskelly.com/post/2021/azure-rest-api-postman-basics/</guid>
      <description>Absolute basics with Azure and PostMan Getting started Many of the articles I have found online with regards to the Azure REST API assume a fair level of familiarity with Azure which can be a good and bad thing. You see the Azure Portal makes interacting with the Azure REST API very easy as a lot of the &amp;ldquo;prerequisite&amp;rdquo; work is done in the portal as part of the process. For this blog post we will work on something quite basic, &amp;ldquo;Create a Virtual Machine&amp;rdquo;.</description>
    </item>
    
  </channel>
</rss>
