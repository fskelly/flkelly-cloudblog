<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PowerShell on Fletcher&#39;s Cloud Blog</title>
    <link>https://swacloudblogflkelly.z1.web.core.windows.net/tags/powershell/</link>
    <description>Recent content in PowerShell on Fletcher&#39;s Cloud Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 17 Aug 2023 09:09:54 +0100</lastBuildDate>
    <atom:link href="https://swacloudblogflkelly.z1.web.core.windows.net/tags/powershell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Starting Wth API Rest Calls With Powershell</title>
      <link>https://swacloudblogflkelly.z1.web.core.windows.net/post/2023/starting-wth-rest-calls-with-powershell/</link>
      <pubDate>Thu, 17 Aug 2023 09:09:54 +0100</pubDate>
      <guid>https://swacloudblogflkelly.z1.web.core.windows.net/post/2023/starting-wth-rest-calls-with-powershell/</guid>
      <description>&lt;h2 id=&#34;what-are-we-doing&#34;&gt;What are we doing?&lt;/h2&gt;&#xA;&lt;p&gt;I am working more and more with the Azure REST APIs now. My &lt;a href=&#34;https://cloud.fskelly.com/post/2023/azure-cost-management-playing-with-api-in-powershell/&#34;&gt;first dive into cost management&lt;/a&gt; was a big hit, so I am expanding on that. The main consideration around that particular API is that is it open. Bu this, I mean a simple HTTP request will return results, no authentication or additional headers or the like are needed. So nice and easy. As we dive more into API and REST API&amp;rsquo;s, this is likely to change. This post, with more planned, is designed to make this easier and break it down into smaller chunks. THese chunks/snippets can be re-used and the principles in the chunks/snippets can be applied to other API&amp;rsquo;s. These in particular are aimed at Azure API&amp;rsquo;s.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Azure Resource Graph and Tags to lock items in Azure</title>
      <link>https://swacloudblogflkelly.z1.web.core.windows.net/post/2022/using-arg-tolock-resources/</link>
      <pubDate>Mon, 03 Oct 2022 13:59:06 +0100</pubDate>
      <guid>https://swacloudblogflkelly.z1.web.core.windows.net/post/2022/using-arg-tolock-resources/</guid>
      <description>&lt;h2 id=&#34;what-are-we-doing&#34;&gt;What are we doing?&lt;/h2&gt;&#xA;&lt;p&gt;We are going to use Azure Resource Graph to find items with a specific tag, in this case &lt;em&gt;{&amp;ldquo;toBeLocked&amp;rdquo;=&amp;ldquo;Yes&amp;rdquo;}&lt;/em&gt; and then place a resource lock on them.&lt;/p&gt;&#xA;&lt;h2 id=&#34;constraints--limitations&#34;&gt;Constraints / limitations&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Use Azure Resource Graph to perform the search. Very fast and gives you a new way to interface with Azure Resources.&lt;/li&gt;&#xA;&lt;li&gt;As part of this post, I am giving samples below to create items, you could use these for testing. Please test and make sure with production environment.&lt;/li&gt;&#xA;&lt;li&gt;You are using an account that can create locks and potentially remove if needed during the testing.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;lets-build-this&#34;&gt;Lets build this&lt;/h2&gt;&#xA;&lt;h3 id=&#34;steps&#34;&gt;Steps&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Create sample items&lt;/li&gt;&#xA;&lt;li&gt;Build Azure Resource Graph Queries&lt;/li&gt;&#xA;&lt;li&gt;Getting items from the query programmatically&lt;/li&gt;&#xA;&lt;li&gt;Adding locks&lt;/li&gt;&#xA;&lt;li&gt;Result&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;create-sample-items-to-lock&#34;&gt;Create sample items to lock&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;## create resource group&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$rgName&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;toberesourcelocked&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$rgLocation&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;northeurope&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$rg&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;new-azresourcegroup&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-name&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$rgname&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-location&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$rgLocation&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;## create items&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$guid&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;New-Guid&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$saName&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;sa&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$saSuffix&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$guid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;ToString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;Split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]+&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$guid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;ToString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;Split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$saName&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$saName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))+&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$saSuffix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;New-AzStorageAccount&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-ResourceGroupName&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$rgName&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Name&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$saName&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Location&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$rgLocation&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-AccountType&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Standard_LRS&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;## create tag(s)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$tags&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;toBeLocked&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Yes&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;## get items in Resource Group and tag them&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$items&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Get-AzResource&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-ResourceGroupName&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$rgName&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$item&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;Update-AzTag&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-ResourceId&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;ResourceId&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Tag&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$tags&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Operation&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Replace&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;## update resource group with tag(s)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;Update-AzTag&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-ResourceId&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$rg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;ResourceId&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Tag&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$tags&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Operation&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Replace&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;build-azure-resource-graph-queries&#34;&gt;Build Azure Resource Graph Queries&lt;/h3&gt;&#xA;&lt;h4 id=&#34;including-resource-groups&#34;&gt;Including Resource Groups&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;resourcecontainers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;| where type == &amp;#34;microsoft.resources/subscriptions/resourcegroups&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;| mv-expand bagexpansion=array tags&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;| where isnotempty(tags)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;| where tags[0] =~ &amp;#39;toBeLocked&amp;#39; and tags[1] =~ &amp;#39;Yes&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;| project  name,type,location,subscriptionId,tags&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;| union (resources &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;| mv-expand bagexpansion=array tags&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;| where isnotempty(tags)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;| where tags[0] =~ &amp;#39;toBeLocked&amp;#39; and tags[1] =~ &amp;#39;Yes&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;| project name,type,location,subscriptionId,tags,id)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;excluding-resource-groups&#34;&gt;Excluding Resource Groups&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Resources&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;| mv-expand bagexpansion=array tags&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;| where isnotempty(tags)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;| where tags[0] =~ &amp;#39;toBeLocked&amp;#39; and tags[1] =~ &amp;#39;Yes&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;resource-groups-only&#34;&gt;Resource Groups Only&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ResourceContainers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;| where type =~ &amp;#39;microsoft.resources/subscriptions/resourcegroups&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;| where tags[&amp;#39;toBeLocked&amp;#39;] =~ &amp;#39;Yes&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;getting-items-from-the-query-programmatically&#34;&gt;Getting items from the query programmatically&lt;/h3&gt;&#xA;&lt;p&gt;We now have the required queries and you can pick whichever one above suits your needs, I am going to be using &lt;a href=&#34;#including-resource-groups&#34;&gt;Including Resource Groups&lt;/a&gt;. Now we need a way to act against these resources. I am personally quite a fan of &lt;a href=&#34;https://learn.microsoft.com/en-us/powershell/&#34;&gt;PowerShell&lt;/a&gt; so I will provide this sample. You can use &lt;a href=&#34;https://learn.microsoft.com/en-us/azure/governance/resource-graph/first-query-powershell#add-the-resource-graph-module&#34;&gt;this&lt;/a&gt; as a base for my example below. When running the query in &lt;a href=&#34;https://learn.microsoft.com/en-us/powershell/&#34;&gt;PowerShell&lt;/a&gt;, I find &lt;a href=&#34;https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_splatting?view=powershell-7.2&#34;&gt;splatting&lt;/a&gt; is easiest for &lt;a href=&#34;https://learn.microsoft.com/en-us/azure/governance/resource-graph/&#34;&gt;Azure Resource Graph&lt;/a&gt; queries&lt;/p&gt;</description>
    </item>
    <item>
      <title>Check Powershell Console Type</title>
      <link>https://swacloudblogflkelly.z1.web.core.windows.net/post/2022/check-powershell-type/</link>
      <pubDate>Wed, 14 Sep 2022 11:14:30 +0100</pubDate>
      <guid>https://swacloudblogflkelly.z1.web.core.windows.net/post/2022/check-powershell-type/</guid>
      <description>&lt;p&gt;I have been working with some Microsoft Hybrid technologies. My specific example here is around &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/azure-arc/vmware-vsphere/overview&#34;&gt;Azure Arc-enabled VMware vSphere&lt;/a&gt; aspects. When running the scripts provided here there is a key aspect.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Do NOT run this in the PowerShell ISE.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Even with this strong recommendation, it is often accidentally used as it is really easy to perform this action with a right click option and this got me to thinking about how can I check this via code?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using SSH Keys with Bicep based Linux VM templates</title>
      <link>https://swacloudblogflkelly.z1.web.core.windows.net/post/2022/bicep-linux-vm-ssh-keys/</link>
      <pubDate>Mon, 20 Jun 2022 08:54:21 +0100</pubDate>
      <guid>https://swacloudblogflkelly.z1.web.core.windows.net/post/2022/bicep-linux-vm-ssh-keys/</guid>
      <description>&lt;p&gt;I this post, I use bicep files for the deployment of Linux VMs AND I add some magic with PowerSehll to allow for the creation or using of existing SSH keys with these VMs.&lt;/p&gt;&#xA;&lt;p&gt;I am a HUGE fan of SSH keys with Linux VMs for obvious reasons. I could just not find a script or scenario that covered this topic in a way that I actually like. I like to show more details and explain.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Openssh and creating SSH Keys with Powershell</title>
      <link>https://swacloudblogflkelly.z1.web.core.windows.net/post/2022/openssh-powershell/</link>
      <pubDate>Mon, 25 Apr 2022 14:27:03 +0100</pubDate>
      <guid>https://swacloudblogflkelly.z1.web.core.windows.net/post/2022/openssh-powershell/</guid>
      <description>&lt;p&gt;In this post I show you my process for creating SSH Keys for Linux Machines.&lt;/p&gt;&#xA;&lt;p&gt;I use a fair amount of Linux in my work career (creating VMs and the like within Azure). Linux VMs are great for testing with, they use SSH and are configured and ready for testing VERY quickly in Azure. I also use a fair amount of Linux in personal life, with &lt;a href=&#34;https://home-assisant.io&#34;&gt;Home assistant&lt;/a&gt; and &lt;a href=&#34;https://plex.tv&#34;&gt;Plex&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I know many people use username and password with Linux environments and there is nothing wrong with this, I simply think that keys are better :smile: . I believe this for a few reasons.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
